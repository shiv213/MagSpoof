#ifndef _SHOCO_INTERNAL
#error This header file is only to be included by 'shoco.c'.
#endif
#pragma once
/*
This file was generated by 'generate_compressor_model.py'
so don't edit this by hand. Also, do not include this file
anywhere. It is internal to 'shoco.c'. Include 'shoco.h'
if you want to use shoco in your project.
*/

#define MIN_CHR 32
#define MAX_CHR 122

static const char chrs_by_chr_id[32] = {
  ' ', 'e', 't', 'a', 'i', 'o', 'n', 's', 'r', 'l', 'c', 'd', 'm', 'f', '#', 'u', 'h', 'p', 'g', 'y', '<', '/', '-', 'b', '.', 'v', '"', 'w', '_', 'S', '=', 'T'
};

static const int8_t chr_ids_by_chr[256] = {
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, 26, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, 24, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, -1, 3, 23, 10, 11, 1, 13, 18, 16, 4, -1, -1, 9, 12, 6, 5, 17, -1, 8, 7, 2, 15, 25, 27, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
};

static const int8_t successor_ids_by_chr_id_and_chr_id[32][32] = {
  {0, -1, 1, 2, 4, 5, 11, 3, -1, 15, 6, 8, 10, 7, -1, -1, -1, 12, -1, -1, -1, -1, -1, 9, -1, -1, -1, 13, -1, 14, -1, -1},
  {0, 14, 5, 11, -1, -1, 3, 2, 1, 8, 6, 4, 10, 7, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1, 13, 12, -1, -1, -1, -1, -1, -1},
  {0, 3, 10, 5, 2, 4, -1, 8, 6, -1, 9, -1, -1, -1, -1, 11, 1, -1, -1, 12, -1, -1, -1, -1, 14, -1, -1, -1, 13, -1, -1, -1},
  {10, -1, 1, -1, 11, -1, 2, 5, 4, 3, 6, 8, 0, -1, -1, 7, -1, 12, 13, 14, -1, -1, -1, 9, -1, 15, -1, -1, -1, -1, -1, -1},
  {-1, 11, 4, 7, -1, 3, 0, 2, 9, 1, 5, 13, 10, 8, -1, -1, -1, 14, 6, -1, -1, -1, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1},
  {2, -1, 5, -1, -1, 12, 0, 14, 1, 7, 11, 10, 4, 6, -1, 3, -1, 8, 13, -1, -1, -1, -1, -1, -1, 15, -1, 9, -1, -1, -1, -1},
  {0, 4, 2, 6, 10, 7, 14, 8, -1, 12, 9, 3, -1, 5, -1, 11, -1, -1, 1, -1, -1, -1, -1, -1, 13, -1, -1, -1, 15, -1, -1, -1},
  {0, 1, 2, 6, 3, 9, -1, 4, -1, -1, 13, -1, -1, -1, -1, 12, 8, 11, -1, 10, -1, 15, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1},
  {1, 0, 5, 4, 2, 3, 8, 6, 10, -1, -1, 13, 11, -1, -1, 12, -1, -1, 14, 7, -1, 15, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1},
  {5, 1, 6, 7, 2, 3, -1, 9, -1, 4, -1, 10, -1, -1, -1, 8, -1, -1, -1, 0, -1, 14, -1, -1, 12, 11, -1, -1, 13, -1, -1, -1},
  {9, 1, 4, 3, 10, 0, -1, 14, 8, 6, 5, -1, -1, -1, -1, 11, 2, -1, -1, 12, 15, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {1, 0, -1, 4, 2, 6, -1, 8, 5, 15, -1, 3, 13, -1, -1, 9, -1, -1, -1, -1, -1, 14, -1, -1, 7, -1, 11, -1, 10, -1, -1, -1},
  {5, 1, -1, 2, 0, 3, 11, 10, -1, 9, -1, 14, 6, -1, -1, 8, -1, 4, -1, 15, -1, -1, -1, 7, 12, -1, -1, -1, 13, -1, -1, -1},
  {3, 4, 10, 0, 1, 2, -1, 9, 6, 14, -1, -1, -1, 5, -1, 8, -1, -1, -1, 12, 7, -1, 15, -1, 11, -1, -1, -1, -1, -1, -1, -1},
  {0, -1, -1, -1, -1, -1, 6, 9, -1, -1, -1, 12, -1, -1, 1, -1, -1, -1, -1, -1, 5, 7, 10, -1, -1, -1, -1, -1, -1, 4, -1, -1},
  {8, 5, 3, 9, 12, -1, 4, 1, 2, 0, 14, 13, 6, 15, -1, -1, -1, 7, 11, -1, -1, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1},
  {3, 0, 5, 2, 1, 4, -1, -1, 6, -1, 14, 12, 15, -1, -1, 9, -1, 8, -1, -1, 13, -1, 10, -1, 11, -1, -1, -1, -1, -1, -1, -1},
  {7, 1, 0, 2, 8, 4, -1, 9, 3, 5, 13, -1, -1, -1, -1, 10, 12, 6, -1, -1, -1, -1, -1, -1, -1, 11, 15, -1, 14, -1, -1, -1},
  {0, 1, -1, -1, 4, 15, 5, 10, 6, 12, -1, -1, -1, -1, -1, 2, 11, -1, -1, -1, -1, -1, -1, -1, 9, -1, -1, -1, 14, -1, 7, -1},
  {1, 6, 13, -1, -1, 3, 9, 2, 11, -1, 14, -1, 15, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, 5, -1, 7, -1, 10, -1, -1, -1},
  {-1, 7, 6, 2, -1, -1, -1, 4, -1, -1, 15, 5, 8, 1, -1, -1, -1, 11, -1, -1, -1, 0, -1, 10, -1, -1, -1, -1, -1, -1, -1, 13},
  {-1, 4, 5, 1, 13, -1, -1, 2, -1, 9, 8, 3, 6, 0, -1, 7, -1, 12, -1, -1, -1, 15, -1, 10, -1, 11, -1, -1, -1, -1, -1, 14},
  {1, -1, 7, 6, -1, 9, -1, 3, -1, 14, 4, 5, 12, -1, -1, -1, -1, 10, -1, -1, -1, -1, 0, 13, -1, -1, -1, -1, -1, -1, -1, -1},
  {9, 0, -1, 3, 2, 6, 12, 10, 7, 1, 13, 11, -1, 15, -1, 5, -1, -1, -1, 4, -1, 14, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, -1, 15, -1, 8, -1, -1, 6, -1, 14, 1, 5, -1, -1, -1, -1, 9, 13, 10, -1, -1, -1, -1, -1, 7, -1, -1, -1, -1, -1, -1, -1},
  {9, 0, 13, 1, 2, 4, -1, 5, -1, -1, 14, 15, 3, -1, -1, -1, -1, 12, 6, -1, -1, 7, -1, -1, -1, -1, -1, -1, 8, -1, -1, -1},
  {0, 11, -1, 4, -1, -1, -1, 2, -1, 7, -1, 10, -1, 3, -1, -1, 14, 5, -1, -1, -1, 6, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1},
  {3, 4, -1, 1, 0, 5, 7, 6, 8, 14, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, 13, -1, -1, -1, 10, -1, -1, 9, 15, -1, 11, -1},
  {-1, 13, 9, 11, 10, 15, 14, 0, 12, 3, 2, 6, 1, 4, -1, -1, -1, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {2, 0, 9, 1, 13, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, 6, 7, -1, 4},
  {1, -1, -1, 5, -1, -1, 7, -1, -1, -1, -1, 13, 15, -1, -1, -1, -1, -1, -1, 14, -1, 6, -1, -1, -1, -1, 0, -1, -1, -1, 2, -1},
  {6, 3, -1, -1, 9, 5, -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13}
};

static const int8_t chrs_by_chr_and_successor_id[MAX_CHR - MIN_CHR][16] = {
  {' ', 't', 'a', 's', 'i', 'o', 'c', 'f', 'd', 'b', 'm', 'n', 'p', 'w', 'S', 'l'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {' ', '>', 's', 'f', 'a', 'p', '/', 'l', '1', '?', 'd', 'e', ',', '+', 'h', '.'},
  {' ', '#', '\t', 'D', 'S', '<', 'n', '/', 'L', 's', '-', 'R', 'd', 'A', 'M', '*'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'-', ' ', '>', 's', 'c', 'd', 'a', 't', '1', 'o', 'p', '*', 'm', 'b', 'l', '2'},
  {' ', 'c', '0', '1', '2', 'd', 's', '.', 'i', 'h', 'g', '3', '9', 'p', 'l', 't'},
  {'f', 'a', 's', 'd', 'e', 't', 'm', 'u', 'c', 'l', 'b', 'v', 'p', 'i', 'T', '/'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'/', 'f', 'a', '!', 's', 'd', 't', 'e', 'm', '?', 'b', 'p', 'I', 'T', 'P', 'c'},
  {'"', ' ', '=', '4', '1', 'a', '/', 'n', '3', '0', '5', '$', '2', 'd', 'y', 'm'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'e', 'a', ' ', 'Y', 'T', 'I', '_', 'S', 'o', 't', 'u', 'L', 'C', 'i', 'E', 'y'},
  {'h', 'E', 'y', 'e', 'Y', 'o', ' ', 'A', 'r', 'i', 'M', 'H', 'C', 'T', 'L', 'I'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'s', 'm', 'c', 'l', 'f', 'C', 'd', 'p', 'R', 't', 'i', 'a', 'r', 'e', 'n', 'o'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'m', 't', 'n', 'l', 'r', 's', 'c', 'u', 'd', 'b', ' ', 'i', 'p', 'g', 'y', 'v'},
  {'e', 'l', 'i', 'a', 'y', 'u', 'o', 'r', 'b', ' ', 's', 'd', 'n', 'c', '/', 'f'},
  {'o', 'e', 'h', 'a', 't', 'c', 'l', 'k', 'r', ' ', 'i', 'u', 'y', '/', 's', '<'},
  {'e', ' ', 'i', 'd', 'a', 'r', 'o', '.', 's', 'u', '_', '"', ',', 'm', '/', 'l'},
  {' ', 'r', 's', 'n', 'd', 't', 'c', 'f', 'l', 'p', 'm', 'a', 'v', '.', 'e', 'x'},
  {'a', 'i', 'o', ' ', 'e', 'f', 'r', '<', 'u', 's', 't', '.', 'y', 'M', 'l', '-'},
  {' ', 'e', 'u', '>', 'i', 'n', 'r', '=', ',', '.', 's', 'h', 'l', ')', '_', 'o'},
  {'e', 'i', 'a', ' ', 'o', 't', 'r', '>', 'p', 'u', '-', '.', 'd', '<', 'c', 'm'},
  {'n', 'l', 's', 'o', 't', 'c', 'g', 'a', 'f', 'r', 'm', 'e', 'v', 'd', 'p', 'z'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'y', 'e', 'i', 'o', 'l', ' ', 't', 'a', 'u', 's', 'd', 'v', '.', '_', '/', '>'},
  {'i', 'e', 'a', 'o', 'p', ' ', 'm', 'b', 'u', 'l', 's', 'n', '.', '_', 'd', 'y'},
  {' ', 'g', 't', 'd', 'e', 'f', 'a', 'o', 's', 'c', 'i', 'u', 'l', '.', 'n', '_'},
  {'n', 'r', ' ', 'u', 'm', 't', 'f', 'l', 'p', 'w', 'd', 'c', 'o', 'g', 's', 'v'},
  {'t', 'e', 'a', 'r', 'o', 'l', 'p', ' ', 'i', 's', 'u', 'v', 'h', 'c', '_', '"'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'e', ' ', 'i', 'o', 'a', 't', 's', 'y', 'n', 'v', 'r', 'm', 'u', 'd', 'g', '/'},
  {' ', 'e', 't', 'i', 's', '.', 'a', '>', 'h', 'o', 'y', 'p', 'u', 'c', ',', '/'},
  {' ', 'h', 'i', 'e', 'o', 'a', 'r', '>', 's', 'c', 't', 'u', 'y', '_', '.', ','},
  {'l', 's', 'r', 't', 'n', 'e', 'm', 'p', ' ', 'a', 'b', 'g', 'i', 'd', 'c', 'f'},
  {'e', 'a', 'i', 'm', 'o', 's', 'g', '/', '_', ' ', '6', '4', 'p', 't', 'c', 'd'},
  {'i', 'a', 'h', ' ', 'e', 'o', 's', 'n', 'r', 'w', '.', '=', ')', '<', 'l', '_'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'>', ' ', 's', 'o', 'p', '.', 'e', '"', ':', 'n', '_', 'r', ',', 't', 'c', 'm'}
};

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable: 4324)    // structure was padded due to __declspec(align())
#endif

typedef struct Pack {
  const uint32_t word;
  const unsigned int bytes_packed;
  const unsigned int bytes_unpacked;
  const unsigned int offsets[8];
  const int16_t _ALIGNED masks[8];
  const char header_mask;
  const char header;
} Pack;

#ifdef _MSC_VER
#pragma warning(pop)
#endif

#define PACK_COUNT 3
#define MAX_SUCCESSOR_N 8

static const Pack packs[PACK_COUNT] = {
  { 0x80000000, 1, 2, { 26, 24, 24, 24, 24, 24, 24 }, { 15, 3, 0, 0, 0, 0, 0 }, 0xc0, 0x80 },
  { 0xc0000000, 2, 4, { 25, 21, 18, 16, 16, 16, 16 }, { 15, 15, 7, 3, 0, 0, 0 }, 0xe0, 0xc0 },
  { 0xe0000000, 4, 8, { 24, 20, 16, 12, 9, 6, 3, 0 }, { 15, 15, 15, 15, 7, 7, 7, 7 }, 0xf0, 0xe0 }
};
